diff --git a/README.md b/README.md
index 523699d..d3e087b 100644
--- a/README.md
+++ b/README.md
@@ -25,7 +25,7 @@ First, you need to import the ```SendgridAPI``` from the ```async_sendgrid``` pa
 from async_sendgrid import SendgridAPI
 import os
 
-API_KEY = os.environ.get['API_KEY']
+API_KEY = os.environ.get('API_KEY')
 sendgrid = SendgridAPI(API_KEY)
 ```
 
diff --git a/async_sendgrid/sendgrid.py b/async_sendgrid/sendgrid.py
index d816a5a..92988de 100644
--- a/async_sendgrid/sendgrid.py
+++ b/async_sendgrid/sendgrid.py
@@ -3,6 +3,8 @@ from __future__ import annotations
 from abc import ABC, abstractmethod
 from typing import TYPE_CHECKING
 
+from httpx import AsyncClient  # type: ignore
+
 import async_sendgrid
 from async_sendgrid.utils import create_session
 
@@ -35,7 +37,7 @@ class BaseSendgridAPI(ABC):
         """Not implemented"""
 
     @abstractmethod
-    async def send(self, message: dict[Any, Any] | Mail) -> Response:
+    async def send(self, message: Mail) -> Response:
         """Not implemented"""
 
 
@@ -47,6 +49,8 @@ class SendgridAPI(BaseSendgridAPI):
     behaviour.
 
     :param api_key: The api key issued by Sendgrid.
+    :param endpoint: The endpoint to send the request to. Defaults to
+        "https://api.sendgrid.com/v3/mail/send".
     :param impersonate_subuser: the subuser to impersonate. Will be passed
         by "On-Behalf-Of" header by underlying client.
         See https://sendgrid.com/docs/User_Guide/Settings/subusers.html
@@ -56,10 +60,11 @@ class SendgridAPI(BaseSendgridAPI):
     def __init__(
         self,
         api_key: str,
+        endpoint: str = "https://api.sendgrid.com/v3/mail/send",
         impersonate_subuser: Optional[str] = None,
     ):
         self._api_key = api_key
-        self._endpoint = "https://api.sendgrid.com/v3/mail/send"
+        self._endpoint = endpoint
         self._version = async_sendgrid.__version__
 
         self._headers = {
@@ -72,7 +77,7 @@ class SendgridAPI(BaseSendgridAPI):
         if impersonate_subuser:
             self._headers["On-Behalf-Of"] = impersonate_subuser
 
-        self._session = create_session(self._headers)
+        self._session: AsyncClient | None = None
 
     @property
     def api_key(self) -> str:
@@ -103,6 +108,8 @@ class SendgridAPI(BaseSendgridAPI):
         ----
             :return: The Twilio SendGrid v3 API response
         """
+        assert self._session
+
         json_message = message.get()
         response = await self._session.post(
             url=self._endpoint, json=json_message
@@ -110,9 +117,11 @@ class SendgridAPI(BaseSendgridAPI):
         return response
 
     async def __aenter__(self):
-        if self._session.is_closed:
+        if not self._session or self._session.is_closed:
             self._session = create_session(headers=self._headers)
         return self
 
     async def __aexit__(self, exc_type: Any, exc: Any, tb: Any):
+        assert self._session
+
         await self._session.aclose()
diff --git a/docker-compose.yml b/docker-compose.yml
new file mode 100644
index 0000000..954600f
--- /dev/null
+++ b/docker-compose.yml
@@ -0,0 +1,14 @@
+version: '3.8'
+
+services:
+
+  sendgrid:
+    image: ghashange/sendgrid-mock:1.9.0
+    restart: unless-stopped
+
+    environment:
+      - API_KEY=${SENDGRID_API_KEY}
+      - CERT_DOMAINNAMES="localhost"
+
+    ports:
+      - 3000:3000
diff --git a/tests/unit/test_client.py b/tests/unit/test_client.py
index b66a165..8db70e8 100644
--- a/tests/unit/test_client.py
+++ b/tests/unit/test_client.py
@@ -1,10 +1,11 @@
-from enum import auto
-import pytest
 from unittest.mock import Mock, patch
-from async_sendgrid.sendgrid import SendgridAPI
+
+import pytest
 from pytest_httpx import HTTPXMock
 from sendgrid.helpers.mail import Mail
 
+from async_sendgrid.sendgrid import SendgridAPI
+
 
 class TestAsyncClient:
     @pytest.fixture(autouse=True)
diff --git a/tests/unit/test_units.py b/tests/unit/test_units.py
index c67034b..e234422 100644
--- a/tests/unit/test_units.py
+++ b/tests/unit/test_units.py
@@ -1,5 +1,7 @@
-from unittest.mock import patch, Mock
+from unittest.mock import Mock, patch
+
 from httpx import AsyncClient
+
 from async_sendgrid.utils import create_session
 
 
