# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Release and Upload Python Package on PyPI

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
    unit:
      name: Call Unit Tests
      uses: ./.github/workflows/unit.yaml

    typing:
      name: Call Mypy
      uses: ./.github/workflows/typing.yaml

    linting:
      name: Call flake8
      uses: ./.github/workflows/linting.yaml

    formatter:
      name: Call black
      uses: ./.github/workflows/formatter.yaml

    release:
      name: Release version
      needs: [unit, typing, linting, formatter]
      steps:
        - name: Check out repository
          uses: actions/checkout@v3
        - name: Use local my-action
          uses: ./.github/action/release.yaml

    deploy:
      needs: [release]
      runs-on: ubuntu-latest

      permissions:
        contents: read

      steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11.5'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: '1.6.1'
          virtualenvs-create: false
          virtualenvs-in-project: false

      - name: Install Dependencies
        run: poetry install --no-root

      - name: Build package
        run: poetry build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
